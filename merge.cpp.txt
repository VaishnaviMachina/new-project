// mergingll.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include<iostream>
using namespace std;
struct Node
{
	int data;
	struct Node *next;
};
void insertNode(Node *hd)
{
	struct Node *temp=new Node;
	struct Node *temp1 = new Node;
	cout << "enter the data\n";
	cin >> temp->data;
	if(hd==NULL)
	{
		hd = temp;
		hd->next = NULL;
	}
	else
	{
		temp1 = hd;
		while (temp1->next != NULL)
			temp1 = temp1->next;
		temp1->next = temp;
		temp->next = NULL;
	}
}

void display(Node *hd)
{
	
	if (hd == NULL)
		return;
	else
	{
		cout << hd->data << "->";
		display(hd->next);
	}
}
void displayadd(Node *hd)
{

	if (hd == NULL)
		return;
	else
	{
		cout << &hd << "->";
		hd = hd->next;
		displayadd(hd);
	}
}
struct Node* merging(Node *hd1, Node *hd2,Node *hd3)
{
	struct Node *t1 = new Node;
	struct Node *t2 = new Node;
	t1 = hd1;
	while (t1->next != NULL)
	{
		t1 = t1->next;
	}
	t1->next = hd2;
	cout << "\n first merging address is " << &hd2 << "  \n";
	cout << "data at first merging point is " << hd2->data << endl;
	t2 = hd2;
	while (t2->next != NULL)
	{
		t2 = t2->next;
	}
	t2->next = hd3;
	cout << "\n second merging address is " << &hd3 << "  \n";
	cout << "data at second merging point is " << hd3->data << endl;

	return hd1;
}


int main()
{
	struct Node *head1 = new Node;
	head1->data = 10;
	head1->next = NULL;
	insertNode(head1);
	insertNode(head1);
	insertNode(head1);
	insertNode(head1);
	insertNode(head1);
	struct Node *head2 = new Node;
	head2->data = 20;
	head2->next = NULL;
	insertNode(head2);
	insertNode(head2);
	insertNode(head2);
	insertNode(head2);
	insertNode(head2);
	struct Node *head3 = new Node;
	head3->data = 30;
	head3->next = NULL;
	insertNode(head3);
	insertNode(head3);
	insertNode(head3);
	insertNode(head3);
	insertNode(head3);
	cout << "displaying first linked list\n";
	display(head1);
	cout << "\n displaying second linked list\n";
	display(head2);
	cout << "\n displaying third linked list\n";
	display(head3);
	cout << "\n displaying address of first linked list\n";
	displayadd(head1);
	cout << "\n displaying address of second linked list\n";
	displayadd(head2);
	cout << "\n displaying address of second linked list\n";
	displayadd(head3);
	head1=merging(head1, head2,head3);
	cout << "displaying merged linked list\n";
	display(head1);
	getchar();
	getchar();
    return 0;
}